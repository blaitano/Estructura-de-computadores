.text
.globl main

main:
    li $t0, 0           # Inicializa el contador a 0 (para contar los números ingresados)
    li $s0, 2147483647  # Inicializa el número mínimo al máximo valor posible de un entero
    li $s1, 3           # Solicitar tres números al usuario

input_loop:
    bge $t0, $s1, find_min  # Salta a la parte de encontrar el número menor si se han ingresado 3 números
    li $v0, 4               # Imprime el mensaje de entrada
    la $a0, prompt
    syscall

    li $v0, 5               # Lee un número entero del usuario
    syscall

    move $t2, $v0           # Copia el número ingresado a $t2

    bge $t2, $s0, not_min   # Compara $t2 con el número menor actual
    move $s0, $t2           # Si es menor, actualiza el número menor

not_min:
    addi $t0, $t0, 1        # Incrementa el contador de números ingresados
    b input_loop

find_min:
    li $v0, 4               # Imprime un mensaje
    la $a0, min_message
    syscall

    move $a0, $s0           # Carga el número menor en $a0
    li $v0, 1               # Imprime el número menor
    syscall

    li $v0, 10              # Termina el programa
    syscall

.data
prompt: .asciiz "Ingrese un número: "
min_message: .asciiz "El número menor es: "
